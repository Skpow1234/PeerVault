// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// - protoc-gen-go v1.33.0
// - protoc             v4.25.3
// source: peervault.proto

package peervault

import (
	"time"

	"google.golang.org/protobuf/types/known/timestamppb"
)

// FileChunk represents a chunk of file data for streaming
type FileChunk struct {
	FileKey  string `json:"file_key,omitempty"`
	Data     []byte `json:"data,omitempty"`
	Offset   int64  `json:"offset,omitempty"`
	IsLast   bool   `json:"is_last,omitempty"`
	Checksum string `json:"checksum,omitempty"`
}

// FileRequest represents a request for file operations
type FileRequest struct {
	Key string `json:"key,omitempty"`
}

// FileResponse represents file metadata
type FileResponse struct {
	Key         string                 `json:"key,omitempty"`
	Name        string                 `json:"name,omitempty"`
	Size        int64                  `json:"size,omitempty"`
	ContentType string                 `json:"content_type,omitempty"`
	Hash        string                 `json:"hash,omitempty"`
	CreatedAt   *timestamppb.Timestamp `json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `json:"updated_at,omitempty"`
	Metadata    map[string]string      `json:"metadata,omitempty"`
	Replicas    []*FileReplica         `json:"replicas,omitempty"`
}

// FileReplica represents a file replica on a peer
type FileReplica struct {
	PeerId    string                 `json:"peer_id,omitempty"`
	Status    string                 `json:"status,omitempty"`
	CreatedAt *timestamppb.Timestamp `json:"created_at,omitempty"`
}

// ListFilesRequest represents a request to list files
type ListFilesRequest struct {
	Page     int32  `json:"page,omitempty"`
	PageSize int32  `json:"page_size,omitempty"`
	Filter   string `json:"filter,omitempty"`
}

// ListFilesResponse represents a list of files
type ListFilesResponse struct {
	Files    []*FileResponse `json:"files,omitempty"`
	Total    int32           `json:"total,omitempty"`
	Page     int32           `json:"page,omitempty"`
	PageSize int32           `json:"page_size,omitempty"`
}

// UpdateFileMetadataRequest represents a request to update file metadata
type UpdateFileMetadataRequest struct {
	Key      string            `json:"key,omitempty"`
	Metadata map[string]string `json:"metadata,omitempty"`
}

// DeleteFileResponse represents a response to file deletion
type DeleteFileResponse struct {
	Success bool   `json:"success,omitempty"`
	Message string `json:"message,omitempty"`
}

// PeerRequest represents a request for peer operations
type PeerRequest struct {
	Id string `json:"id,omitempty"`
}

// PeerResponse represents peer information
type PeerResponse struct {
	Id        string                 `json:"id,omitempty"`
	Address   string                 `json:"address,omitempty"`
	Port      int32                  `json:"port,omitempty"`
	Status    string                 `json:"status,omitempty"`
	LastSeen  *timestamppb.Timestamp `json:"last_seen,omitempty"`
	CreatedAt *timestamppb.Timestamp `json:"created_at,omitempty"`
	Metadata  map[string]string      `json:"metadata,omitempty"`
}

// AddPeerRequest represents a request to add a peer
type AddPeerRequest struct {
	Address  string            `json:"address,omitempty"`
	Port     int32             `json:"port,omitempty"`
	Metadata map[string]string `json:"metadata,omitempty"`
}

// ListPeersResponse represents a list of peers
type ListPeersResponse struct {
	Peers []*PeerResponse `json:"peers,omitempty"`
	Total int32           `json:"total,omitempty"`
}

// RemovePeerResponse represents a response to peer removal
type RemovePeerResponse struct {
	Success bool   `json:"success,omitempty"`
	Message string `json:"message,omitempty"`
}

// PeerHealthResponse represents peer health information
type PeerHealthResponse struct {
	PeerId        string            `json:"peer_id,omitempty"`
	Status        string            `json:"status,omitempty"`
	LatencyMs     float64           `json:"latency_ms,omitempty"`
	UptimeSeconds int32             `json:"uptime_seconds,omitempty"`
	Metrics       map[string]string `json:"metrics,omitempty"`
}

// SystemInfoResponse represents system information
type SystemInfoResponse struct {
	Version       string                 `json:"version,omitempty"`
	UptimeSeconds int64                  `json:"uptime_seconds,omitempty"`
	StartTime     *timestamppb.Timestamp `json:"start_time,omitempty"`
	StorageUsed   int64                  `json:"storage_used,omitempty"`
	StorageTotal  int64                  `json:"storage_total,omitempty"`
	PeerCount     int32                  `json:"peer_count,omitempty"`
	FileCount     int32                  `json:"file_count,omitempty"`
}

// MetricsResponse represents system metrics
type MetricsResponse struct {
	RequestsTotal       int64                  `json:"requests_total,omitempty"`
	RequestsPerMinute   float64                `json:"requests_per_minute,omitempty"`
	ActiveConnections   int32                  `json:"active_connections,omitempty"`
	StorageUsagePercent float64                `json:"storage_usage_percent,omitempty"`
	LastUpdated         *timestamppb.Timestamp `json:"last_updated,omitempty"`
}

// HealthResponse represents health check response
type HealthResponse struct {
	Status    string                 `json:"status,omitempty"`
	Timestamp *timestamppb.Timestamp `json:"timestamp,omitempty"`
	Version   string                 `json:"version,omitempty"`
}

// FileOperationEvent represents a file operation event
type FileOperationEvent struct {
	EventType string                 `json:"event_type,omitempty"`
	FileKey   string                 `json:"file_key,omitempty"`
	PeerId    string                 `json:"peer_id,omitempty"`
	Timestamp *timestamppb.Timestamp `json:"timestamp,omitempty"`
	Metadata  map[string]string      `json:"metadata,omitempty"`
}

// PeerEvent represents a peer event
type PeerEvent struct {
	EventType string                 `json:"event_type,omitempty"`
	PeerId    string                 `json:"peer_id,omitempty"`
	Timestamp *timestamppb.Timestamp `json:"timestamp,omitempty"`
	Metadata  map[string]string      `json:"metadata,omitempty"`
}

// SystemEvent represents a system event
type SystemEvent struct {
	EventType string                 `json:"event_type,omitempty"`
	Component string                 `json:"component,omitempty"`
	Timestamp *timestamppb.Timestamp `json:"timestamp,omitempty"`
	Message   string                 `json:"message,omitempty"`
	Metadata  map[string]string      `json:"metadata,omitempty"`
}

// Helper functions to create timestamps
func NewTimestamp(t time.Time) *timestamppb.Timestamp {
	return timestamppb.New(t)
}

func Now() *timestamppb.Timestamp {
	return timestamppb.Now()
}
